{"categories":[{"title":"cat","uri":"https://leeggco.com/categories/cat/"},{"title":"Node.js","uri":"https://leeggco.com/categories/node.js/"}],"posts":[{"content":"get 请求\nRoute.get('/posts', () =\u0026gt; 'Get has been created.')  post 请求\nRoute.post('/posts', () =\u0026gt; 'Post has been created.')  create 创建，这里有个重复路由的问题，需要放在posts/:id 的前面\nRoute.get('/posts/create', 'PostController.create')  请求指定数据，如果不希望强制传入id 则可以使用 /posts/:id?\nRoute.get('/posts/:id', ({ params }) =\u0026gt; { return`You're watching post ${params.id}` })  patch 更新\nRoute.patch('/posts/:id', ({ params }) =\u0026gt; { return`Post ${params.id} has been updated.` })  delete 删除\nRoute.delete('/posts/:id', ({ params }) =\u0026gt; { return`Post ${params.id} has been removed.` })  edit 编辑\nRoute.get('/posts/:id/edit', 'PostController.edit')  资源路由\n// 因为以上请求方式非常常见，所以可以使用资源路由来达到同样的效果 Route .resource('posts', 'PostController') // 排除请求类型 // .except(['index']) // .only 指定可用的请求 // .only(['index', 'show']) // .apiOnly()  路由命名\nRoute .get('/user---name', () =\u0026gt; 'List of users.') .as('users.index')  路由格式\nRoute.get('/users', ({ request }) =\u0026gt; { switch (request.format()) { case 'json': return [ { name: 'york'}, { name: 'leeggco'} ] default: return '- york- leeggco' } }).formats(['json']) // 强制格式 // .formats(['json', 'html'], true) // http://127.0.0.1:3333/users.json // http://127.0.0.1:3333/users  路由群组\nRoute .group(() =\u0026gt; { Route.get('users', () =\u0026gt; 'Manage users') Route.get('posts', () =\u0026gt; 'Manage posts') }) .prefix('admin') // http://127.0.0.1:3333/admin/users // http://127.0.0.1:3333/admin/posts  单页应用的路由\nRoute.any('*', ({ view }) =\u0026gt; view.render('welcome')) // http://127.0.0.1:3333/any  完整代码\n","id":0,"section":"posts","summary":"get 请求 Route.get('/posts', () =\u0026gt; 'Get has been created.') post 请求 Route.post('/posts', () =\u0026gt; 'Post has been created.') create 创建，这里有个重复路由的问题，需要放在posts/:id 的前面 Route.get('/posts/create', 'PostController.create') 请求指定数据，如果不希望强制传入","tags":["adonis"],"title":"Adonis —— 路由","uri":"https://leeggco.com/2020/04/adonis-02/","year":"2020"},{"content":"安装命令（全局）\nnpm install @adonisjs/cli --global  或\nnpm i -g adonis-cli  安装数据库（sqlite3）\nnpm install sqlite3  创建项目\nadonis new demo-adonis  运行项目\nnpm run serve:dev  创建控制器\nadonis make:controller Posts  创建视图\nadonis make:view posts  创建数据表\nadonis make:migration Post  生成数据表\nadonis migration:run  ","id":1,"section":"posts","summary":"安装命令（全局） npm install @adonisjs/cli --global 或 npm i -g adonis-cli 安装数据库（sqlite3） npm install sqlite3 创建项目 adonis new demo-adonis 运行项目 npm run serve:dev 创建控制器 adonis make:controller Posts 创建视图 adonis make:view posts 创建数据表 adonis make:migration","tags":["adonis"],"title":"adonis —— 常用命令","uri":"https://leeggco.com/2020/04/adonis-01/","year":"2020"},{"content":"hello, Hugo ","id":2,"section":"posts","summary":"hello, Hugo ","tags":["test"],"title":"hello, world","uri":"https://leeggco.com/2020/04/hello-world/","year":"2020"}],"tags":[{"title":"adonis","uri":"https://leeggco.com/tags/adonis/"},{"title":"index","uri":"https://leeggco.com/tags/index/"},{"title":"test","uri":"https://leeggco.com/tags/test/"}]}