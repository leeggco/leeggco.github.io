{"categories":[{"title":"cat","uri":"https://leeggco.com/categories/cat/"},{"title":"Node.js","uri":"https://leeggco.com/categories/node.js/"}],"posts":[{"content":"MariaDB 安装\nsudo yum install MariaDB-server MariaDB-client  启动\nservice mysql start  设置root用户密码\nmysqladmin -u root password \u0026quot;mypassword\u0026quot;  登录\nmysql -uroot -p  Adonis adonis支持 PostgreSQL，SQLite，MySQL，MariaDB，Oracle，MSSQL 数据库，默认为SQLite。在 config/database 中修改配置。\n配置数据库\nconnection: Env.get('DB_CONNECTION', 'mysql'),  创建数据库模型（Model）\nadonis make:model posts  创建迁移（migration）\n数据库迁移是一种从代码创建，更改和删除数据库表而不是编写SQL查询的过程。\nadonis make:migration posts  查看状态\nadonis migration:status  执行迁移，创建表格\nadonis migration:run  PM2 pm2 start server.js  ","id":0,"section":"posts","summary":"MariaDB 安装 sudo yum install MariaDB-server MariaDB-client 启动 service mysql start 设置root用户密码 mysqladmin -u root password \u0026quot;mypassword\u0026quot; 登录 mysql -uroot -p Adonis adonis支持 PostgreSQL，SQLite，MySQL，Mari","tags":["adonis"],"title":"Adonis —— MariaDB 数据库基本操作","uri":"https://leeggco.com/2020/04/adonis-04/","year":"2020"},{"content":"查询参数query \u0026amp; params\nRoute.get('/posts', ({ request }) =\u0026gt; { return request.get() })  使用post 请求\nRoute.post('/posts', ({ request }) =\u0026gt; request.post())  同时得到请求地址的参数，使用request.all()\nRoute.post('/posts', ({ request }) =\u0026gt; request.all())  获取指定参数，使用request.only()\nRoute.post('/posts', ({ request }) =\u0026gt; request.only(['title', 'content']))  排除数据，使用request.except()\nRoute.post('/posts', ({ request }) =\u0026gt; request.except(['title', 'content']))  获取指定参数，使用request.input()\nRoute.post('/posts', ({ request }) =\u0026gt; request.input('status', '默认'))  Form 表单数据\n{ \u0026quot;title\u0026quot;: [ \u0026quot;Lemon\u0026quot;, \u0026quot;Bnanna\u0026quot; ], \u0026quot;content\u0026quot;: [ \u0026quot;🍋\u0026quot;, \u0026quot;🍌\u0026quot; ] } Route.post('/posts', ({ request }) =\u0026gt; request.collet(['title', 'content']))  自动转换，使用request.collect\nRoute.post('/posts', ({ request }) =\u0026gt; request.collect(['title', 'content']))  获取所有头部信息\nRoute.get('/posts', ({ request }) =\u0026gt; request.headers())  获取指定信息\nRoute.get('/posts', ({ request }) =\u0026gt; request.header('user-agent'))  设置响应头部信息\nRoute.get('/posts', ({ request, response }) =\u0026gt; { // response.header('Content-type', 'text/plain') // 简写 response.type('text') return '\u0026lt;h1\u0026gt;List of posts.\u0026lt;/h1\u0026gt;' })  Cookies 设置与获取\nRoute.get('/posts', ({ request, response }) =\u0026gt; { // 设置cookie response.cookie('theme', 'dark') // 获取cookie // request.cookie('theme', '默认') // 删除cookie response.clearCookie('theme') return request.cookies() })  Response 响应\nRoute.get('/posts', ({ response }) =\u0026gt; { // response.send('List of response') // return 'List of return.' // 会自动将对象和组数转换成JSON return { 'title': 'hello' } })  异步响应\nconst delay = (data, time) =\u0026gt; { return new Promise((resolve, reject) =\u0026gt; { setTimeout(() =\u0026gt; { resolve(data) }, time); }) } Route.get('/posts', async ({ response }) =\u0026gt; { const data = await delay('List of Posts.', 3000) return data })  重定向 Redirects\nRoute.get('/list-of-posts', ({ response }) =\u0026gt; { // response.redirect('/posts', true, 301) response.route('list-of-posts') }) Route.get('/list-of-food-posts', ({ response }) =\u0026gt; { // response.redirect('/posts', true, 301) response.route('list-of-posts', { category: 'food' }) }) Route.get('/posts/:category?', ({ params }) =\u0026gt; { return `List of ${ params.category || 'default' } Posts.` }).as('list-of-posts')  完整源码\n","id":1,"section":"posts","summary":"查询参数query \u0026amp; params Route.get('/posts', ({ request }) =\u0026gt; { return request.get() }) 使用post 请求 Route.post('/posts', ({ request }) =\u0026gt; request.post()) 同时得到请求地址的参数，使用request.all() Route.post('/posts', ({ request }) =\u0026gt; request.all()) 获取指","tags":["adonis"],"title":"Adonis —— 请求","uri":"https://leeggco.com/2020/04/adonis-03/","year":"2020"},{"content":"get 请求\nRoute.get('/posts', () =\u0026gt; 'Get has been created.')  post 请求\nRoute.post('/posts', () =\u0026gt; 'Post has been created.')  create 创建，这里有个重复路由的问题，需要放在posts/:id 的前面\nRoute.get('/posts/create', 'PostController.create')  请求指定数据，如果不希望强制传入id 则可以使用 /posts/:id?\nRoute.get('/posts/:id', ({ params }) =\u0026gt; { return`You're watching post ${params.id}` })  patch 更新\nRoute.patch('/posts/:id', ({ params }) =\u0026gt; { return`Post ${params.id} has been updated.` })  delete 删除\nRoute.delete('/posts/:id', ({ params }) =\u0026gt; { return`Post ${params.id} has been removed.` })  edit 编辑\nRoute.get('/posts/:id/edit', 'PostController.edit')  资源路由\n// 因为以上请求方式非常常见，所以可以使用资源路由来达到同样的效果 Route .resource('posts', 'PostController') // 排除请求类型 // .except(['index']) // .only 指定可用的请求 // .only(['index', 'show']) // .apiOnly()  路由命名\nRoute .get('/user---name', () =\u0026gt; 'List of users.') .as('users.index')  路由格式\nRoute.get('/users', ({ request }) =\u0026gt; { switch (request.format()) { case 'json': return [ { name: 'york'}, { name: 'leeggco'} ] default: return '- york- leeggco' } }).formats(['json']) // 强制格式 // .formats(['json', 'html'], true) // http://127.0.0.1:3333/users.json // http://127.0.0.1:3333/users  路由群组\nRoute .group(() =\u0026gt; { Route.get('users', () =\u0026gt; 'Manage users') Route.get('posts', () =\u0026gt; 'Manage posts') }) .prefix('admin') // http://127.0.0.1:3333/admin/users // http://127.0.0.1:3333/admin/posts  单页应用的路由\nRoute.any('*', ({ view }) =\u0026gt; view.render('welcome')) // http://127.0.0.1:3333/any  完整代码\n","id":2,"section":"posts","summary":"get 请求 Route.get('/posts', () =\u0026gt; 'Get has been created.') post 请求 Route.post('/posts', () =\u0026gt; 'Post has been created.') create 创建，这里有个重复路由的问题，需要放在posts/:id 的前面 Route.get('/posts/create', 'PostController.create') 请求指定数据，如果不希望强制传入","tags":["adonis"],"title":"Adonis —— 路由","uri":"https://leeggco.com/2020/04/adonis-02/","year":"2020"},{"content":"安装命令（全局）\nnpm install @adonisjs/cli --global  或\nnpm i -g adonis-cli  安装数据库（sqlite3）\nnpm install sqlite3  创建项目\nadonis new demo-adonis  运行项目\nnpm run serve:dev  创建控制器\nadonis make:controller Posts  创建视图\nadonis make:view posts  创建数据表\nadonis make:migration Post  生成数据表\nadonis migration:run  ","id":3,"section":"posts","summary":"安装命令（全局） npm install @adonisjs/cli --global 或 npm i -g adonis-cli 安装数据库（sqlite3） npm install sqlite3 创建项目 adonis new demo-adonis 运行项目 npm run serve:dev 创建控制器 adonis make:controller Posts 创建视图 adonis make:view posts 创建数据表 adonis make:migration","tags":["adonis"],"title":"adonis —— 常用命令","uri":"https://leeggco.com/2020/04/adonis-01/","year":"2020"},{"content":"hello, Hugo ","id":4,"section":"posts","summary":"hello, Hugo ","tags":["test"],"title":"hello, world","uri":"https://leeggco.com/2020/04/hello-world/","year":"2020"}],"tags":[{"title":"adonis","uri":"https://leeggco.com/tags/adonis/"},{"title":"index","uri":"https://leeggco.com/tags/index/"},{"title":"test","uri":"https://leeggco.com/tags/test/"}]}